<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Client extends \App\Entity\Client implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'active', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'shortDescription', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'fullDescription', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'logoUrl', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'url', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'dpo', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'technicalContact', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'commercialContact', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'branches', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'clientGrants', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'installPerms'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'active', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'shortDescription', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'fullDescription', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'logoUrl', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'url', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'dpo', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'technicalContact', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'commercialContact', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'branches', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'clientGrants', '' . "\0" . 'App\\Entity\\Client' . "\0" . 'installPerms'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Client $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?string
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function isActive(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', []);

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive(bool $active): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDescription', []);

        return parent::getShortDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setShortDescription(?string $shortDescription): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShortDescription', [$shortDescription]);

        return parent::setShortDescription($shortDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullDescription', []);

        return parent::getFullDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setFullDescription(?string $fullDescription): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFullDescription', [$fullDescription]);

        return parent::setFullDescription($fullDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogoUrl(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogoUrl', []);

        return parent::getLogoUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogoUrl(?string $logoUrl): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogoUrl', [$logoUrl]);

        return parent::setLogoUrl($logoUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl(?string $url): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getDpo(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDpo', []);

        return parent::getDpo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDpo(string $dpo): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDpo', [$dpo]);

        return parent::setDpo($dpo);
    }

    /**
     * {@inheritDoc}
     */
    public function getTechnicalContact(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTechnicalContact', []);

        return parent::getTechnicalContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setTechnicalContact(string $technicalContact): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTechnicalContact', [$technicalContact]);

        return parent::setTechnicalContact($technicalContact);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommercialContact(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommercialContact', []);

        return parent::getCommercialContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommercialContact(string $commercialContact): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommercialContact', [$commercialContact]);

        return parent::setCommercialContact($commercialContact);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\App\Entity\User $user): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getBranches(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBranches', []);

        return parent::getBranches();
    }

    /**
     * {@inheritDoc}
     */
    public function addBranch(\App\Entity\Branch $branch): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBranch', [$branch]);

        return parent::addBranch($branch);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBranch(\App\Entity\Branch $branch): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBranch', [$branch]);

        return parent::removeBranch($branch);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientGrants(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientGrants', []);

        return parent::getClientGrants();
    }

    /**
     * {@inheritDoc}
     */
    public function addClientGrant(\App\Entity\ClientGrants $clientGrant): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addClientGrant', [$clientGrant]);

        return parent::addClientGrant($clientGrant);
    }

    /**
     * {@inheritDoc}
     */
    public function removeClientGrant(\App\Entity\ClientGrants $clientGrant): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeClientGrant', [$clientGrant]);

        return parent::removeClientGrant($clientGrant);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstallPerms(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstallPerms', []);

        return parent::getInstallPerms();
    }

    /**
     * {@inheritDoc}
     */
    public function addInstallPerm(\App\Entity\InstallPerm $installPerm): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInstallPerm', [$installPerm]);

        return parent::addInstallPerm($installPerm);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInstallPerm(\App\Entity\InstallPerm $installPerm): \App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInstallPerm', [$installPerm]);

        return parent::removeInstallPerm($installPerm);
    }

}
